version: 2.1

parameters:
  go-version:
    type: string
    default: "1.22.3"

executors:
  default:
    machine:
      image: ubuntu-2004:current 

orbs:
  go: circleci/go@2.2.3
  utils: ethereum-optimism/circleci-utils@0.0.11

commands:
  checkout-with-submodules:
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init --recursive
  install-foundry:
    steps:
      - run:
          name: Setup $PATH for foundry
          command: echo 'export PATH=$HOME/.foundry/bin:$PATH' >> $BASH_ENV
      - run:
          name: Install Foundry
          command: |
            curl -L https://foundry.paradigm.xyz | bash
            foundryup
            anvil --version
            forge --version
  install-just:
    steps:
      - run:
          name: Setup $PATH for just
          command: echo 'export PATH=$HOME/.just/bin:$PATH' >> $BASH_ENV
      - run:
          name: Install just
          command: |
            curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/.just/bin --tag 1.38.0
            just --version
  install-golangci-lint:
    steps:
      - run:
          name: Setup golangci-lint
          command: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.63.4

jobs:
  check-versions-monorepo:
    executor: default
    steps:
      - checkout-with-submodules
      - install-just
      - run:
          name: Check versions
          command: just check-monorepo-versions

  contracts-tests:
    executor: default
    environment:
      FOUNDRY_PROFILE: ci
    steps:
      - checkout-with-submodules
      - install-just
      - install-foundry
      - run:
          name: Run Forge build
          command: just build-contracts
      - run:
          name: Run Forge tests
          command: just test-contracts

  go-lint:
    executor: 
      name: go/default # Use an executor from the go orb
      tag: << pipeline.parameters.go-version >>
    steps:
      - checkout-with-submodules
      - install-just
      - go/load-mod-cache # Load cached Go modules.
      - go/mod-download # Run 'go mod download'.
      - go/save-mod-cache # Save Go modules to cache.
      - install-golangci-lint
      - run:
          name: Run linter
          command: just lint-go

  go-tests:
    executor: 
      name: go/default # Use an executor from the go orb
      tag: << pipeline.parameters.go-version >>
    steps:
      - checkout-with-submodules
      - install-just
      - go/load-mod-cache # Load cached Go modules.
      - go/mod-download # Run 'go mod download'.
      - go/save-mod-cache # Save Go modules to cache.
      - run:
          # We need to "rename" some of the variables coming from the CircleCI context
          # to match what supersim expects
          # 
          # FIXME BASE_L2URL Is not defined in the CircleCI context
          name: Setup environment variables
          command: |
            echo "export SUPERSIM_RPC_URL_OP=$MAINNET_L2URL" >> $BASH_ENV
            echo "export SUPERSIM_RPC_URL_BASE=$BASE_L2URL" >> $BASH_ENV
      - run:
          name: Run tests
          command: just test-go

workflows:
  main:
    jobs:
      - check-versions-monorepo
      - contracts-tests
      - go-lint
      - go-tests:
          context:
            - oplabs-fpp-nodes